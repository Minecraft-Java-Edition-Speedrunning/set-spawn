plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'legacy-looming' version "1.0-SNAPSHOT" // Version must be the same as fabric-loom's
    id 'org.ajoberstar.grgit' version '4.1.0'
}

def getVersionMetadata() {
    // CI builds version numbers
    def build_id = System.getenv("RELEASE_NUMBER")
    if (build_id != null) {
        return build_id + ".0.0"
    }

    // Development builds
    if (grgit == null) {
        return "dev"
    }

    // Named development builds
    def id = grgit.head().abbreviatedId
    if (!grgit.status().clean) {
        id += "-dirty"
    }

    return "rev.${id}"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


archivesBaseName = "${project.mod_id}-1.9-1.12.2"
version = "${getVersionMetadata()}"

loom {
    setIntermediaryUrl('https://repo.legacyfabric.net/repository/legacyfabric/net/legacyfabric/intermediary/%1$s/intermediary-%1$s-v2.jar')
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.legacyfabric:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
    inputs.property "mod_id", project.mod_id
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "mod_id": project.mod_id, "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) it.options.release = 8
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE")
}
